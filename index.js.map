{"version":3,"sources":["index.js"],"names":[],"mappings":"AAAA,YAAY,CAAC;;;;;;;;;;AACb,IAAM,WAAW,GAAG,OAAO,CAAC,SAAS,CAAC,CAAC,OAAO,CAAC;AAC/C,IAAM,OAAO,GAAG,OAAO,CAAC,SAAS,CAAC;;;;;AAAC;IAKtB,OAAO,WAAP,OAAO;AAChB,aADS,OAAO,CACJ,MAAM,EAAE,MAAM,EAAE;8BADnB,OAAO;;AAEZ,YAAI,CAAC,MAAM,GAAG,IAAI,WAAW,CAAC,MAAM,EAAE,MAAM,CAAC,CAAC;KACjD;;iBAHQ,OAAO;;8BAKV;AACF,gBAAI,CAAC,MAAM,CAAC,GAAG,CAAC,KAAK,CAAC,IAAI,CAAC,MAAM,CAAC,GAAG,EAAE,SAAS,CAAC,CAAC;AAClD,mBAAO,SAAS,CAAC,SAAS,CAAC,MAAM,GAAG,CAAC,CAAC,CAAC;SAC1C;;;WARQ,OAAO;;;;;;;AAcpB,IAAM,aAAa,GAAG,IAAI,OAAO,CAAC,OAAO,CAAC,MAAM,EAAE,OAAO,CAAC,MAAM,CAAC,CAAC;;AAE3D,IAAM,GAAG,WAAH,GAAG,GAAG,aAAa,CAAC,GAAG,CAAC,IAAI,CAAC,aAAa,CAAC,CAAC","file":"index.js","sourcesContent":["\"use strict\";\nconst NodeConsole = require('console').Console;\nconst process = require('process');\n\n/**\n * Wrapper around node console.\n */\nexport class Console {\n    constructor(stdOut, stdErr) {\n        this._inner = new NodeConsole(stdOut, stdErr);\n    }\n    \n    log() {\n        this._inner.log.apply(this._inner.log, arguments);\n        return arguments[arguments.length - 1];\n    }\n}\n\n/**\n * Global console used for `console.log` style APIs\n */\nconst globalConsole = new Console(process.stdout, process.stderr);\n\nexport const log = globalConsole.log.bind(globalConsole);"],"sourceRoot":"/source/"}